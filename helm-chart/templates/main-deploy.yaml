---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ns-go.fullname" . | quote }}
  labels:
    {{- include "ns-go.main.labels" . | nindent 4 }}
  annotations:
    {{- include "ns-go.main.annotations" . | nindent 4 }}
    {{- include "ns-go.checksumPodAnnotations" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "ns-go.main.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.main.replicas }}
  strategy: {{- toYaml .Values.main.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "ns-go.main.selectorLabels" . | nindent 8 }}
      annotations:
        {{- include "ns-go.main.annotations" . | nindent 8 }}
        {{- include "ns-go.checksumPodAnnotations" . | nindent 8 }}
    spec:
      {{- if .Values.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.pullSecret }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.main.podSecurityContext | nindent 8 }}
      containers:

        - name: "{{ .Values.main.appName }}"
          {{- if .Values.main.appCommand }}
          command: {{ .Values.main.appCommand }}
          {{- end }}
          {{- with .Values.main.lifecycleHooks }}
          lifecycle:
          {{- tpl . $ | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.pullPolicy | quote }}
          resources: {{- toYaml .Values.main.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: "{{ include "ns-go.fullname" . }}"
            - secretRef:
                name: "{{ include "ns-go.fullname" . }}"
          ports:
          {{- range .Values.main.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .ports.internal }}
              protocol: {{ .protocol }}
          {{- end }}
          volumeMounts:
            - name: "{{ include "ns-go.fullname" . }}-logs"
              mountPath: {{ .Values.appConfig.log.dir | quote }}
          {{- if .Values.appConfig.extraFiles }}
            {{- range .Values.appConfig.extraFiles }}
            - name: "{{ include "ns-go.fullname" $ }}-{{ .path | replace "/" "-" | replace "." "-" | trimAll "-" }}"
              mountPath: {{ .path | quote }}
              {{- if .readOnly }}
              readOnly: {{ .readOnly }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.main.probes.enabled }}
          {{- if .Values.main.probes.readiness }}
          readinessProbe: {{- toYaml .Values.main.probes.readiness | nindent 12 }}
          {{- end }}
          {{- if .Values.main.probes.liveness }}
          livenessProbe: {{- toYaml .Values.main.probes.liveness | nindent 12 }}
          {{- end }}
          {{- if .Values.main.probes.startup }}
          startupProbe: {{- toYaml .Values.main.probes.startup | nindent 12 }}
          {{- end }}
          {{- end }}

        {{- if .Values.logging.enabled }}
        {{- if .Values.logging.vector.enabled }}
        - name: "vector"
          image: "{{ .Values.logging.vector.image.registry }}/{{ .Values.logging.vector.image.name }}:{{ .Values.logging.vector.image.tag }}"
          resources:
            {{- toYaml .Values.logging.vector.resources | nindent 12 }}
          volumeMounts:
            - name: "{{ include "ns-go.fullname" . }}-logs"
              mountPath: {{ .Values.appConfig.log.dir | quote }}
            - name: "vector-data"
              mountPath: {{ .Values.logging.vector.dataDir | quote }}
            - name: "config-volume-vector"
              mountPath: "/etc/vector/vector.toml"
              subPath: vector.toml
              readOnly: true
        {{- end }}
        {{- end }}

      volumes:
        - name: "{{ include "ns-go.fullname" . }}-logs"
          emptyDir: {}

        {{- if .Values.logging.enabled }}
        {{- if .Values.logging.vector.enabled }}
        - name: "vector-data"
          emptyDir: {}
        - name: "config-volume-vector"
          configMap:
            name: "{{ include "ns-go.fullname" . }}-logging"
            items:
              - key: vector.toml
                path: vector.toml
        {{- end }}
        {{- end }}

        {{- if .Values.appConfig.extraFiles }}
        {{- range .Values.appConfig.extraFiles }}
        {{- $extraFiles := . }}
        - name: "{{ include "ns-go.fullname" $ }}-{{ .path | replace "/" "-" | replace "." "-" | trimAll "-" }}"
          secret:
            secretName: "{{ include "ns-go.fullname" $ }}-extra-files-{{ .path | replace "/" "-" | replace "." "-" | trimAll "-" }}"
            items:
            {{- range .files }}
              - key: "{{ .name }}"
                path: "{{ .name }}"
            {{- end }}
        {{- end }}
        {{- end }}

      {{- if .Values.main.nodeSelector }}
      nodeSelector: {{ toYaml .Values.main.nodeSelector | nindent 8 }}
      {{- end }}

      {{- if .Values.main.affinity }}
      affinity: {{ toYaml .Values.main.affinity | nindent 8 }}
      {{- else }}
      affinity:
        {{- if .Values.main.affinity }}
        {{- toYaml .Values.main.affinity | nindent 8 }}
        {{- else }}
        {{- if eq .Values.main.podAntiAffinityPreset "soft" }}
        {{- include "ns-go.main.podAntiAffinity.soft" . | nindent 8 }}
        {{- else if eq .Values.main.podAntiAffinityPreset "hard" }}
        {{- include "ns-go.main.podAntiAffinity.hard" . | nindent 8 }}
        {{- end }}
        {{- end }}
      {{- end }}

      {{- if .Values.main.tolerations }}
      tolerations: {{ toYaml .Values.main.tolerations | nindent 8 }}
      {{- end }}
...