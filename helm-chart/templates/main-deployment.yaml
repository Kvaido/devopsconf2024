{{- range $name, $v := .Values.instances }}
{{- if $v.enabled }}
{{- $config := mergeOverwrite (deepCopy $.Values.common) (deepCopy $v) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "ns-go.fullname" $ }}-{{ $name }}"
  labels:
    {{- include "ns-go.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $name }}
  annotations:
    {{- include "ns-go.common.annotations" $ | nindent 4 }}
    {{- include "ns-go.checksumPodAnnotations" $ | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "ns-go.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ $name }}
  replicas: {{ $config.appConfig.replicas }}
  strategy: {{- toYaml $config.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "ns-go.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ $name }}
      annotations:
        {{- include "ns-go.common.annotations" $ | nindent 8 }}
        {{- include "ns-go.checksumPodAnnotations" $ | nindent 8 }}
    spec:
      {{- if $.Values.pullSecret }}
      imagePullSecrets:
        - name: {{ $.Values.pullSecret }}
      {{- end }}
      securityContext:
        {{- toYaml $config.podSecurityContext | nindent 8 }}
      containers:
        - name: "{{ $config.appConfig.appName }}"
          {{- if $config.appConfig.appCommand }}
          command:
            {{- $config.appConfig.appCommand | toYaml | nindent 12 }}
          {{- end }}
          {{- with $config.appConfig.lifecycleHooks }}
          lifecycle:
          {{- tpl . $ | nindent 12 }}
          {{- end }}
          image: "{{ $.Values.image.registry }}/{{ $.Values.image.name }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.pullPolicy | quote }}
          resources: {{- toYaml $config.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: "{{ include "ns-go.fullname" $ }}-{{ $name }}"
            - secretRef:
                name: "{{ include "ns-go.fullname" $ }}-{{ $name }}"
          ports:
          {{- range $config.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .ports.internal }}
              protocol: {{ .protocol }}
          {{- end }}
          volumeMounts:
            - name: "{{ include "ns-go.fullname" $ }}-{{ $name }}-logs"
              mountPath: {{ $config.appConfig.log.dir | quote }}
          {{- if $config.appConfig.extraFiles }}
            {{- range $config.appConfig.extraFiles }}
            - name: "{{ include "ns-go.fullname" $ }}-{{ $name }}-{{ .path | replace "/" "-" | replace "." "-" | trimAll "-" }}"
              mountPath: {{ .path | quote }}
              {{- if .readOnly }}
              readOnly: {{ .readOnly }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if $config.probes.enabled }}
          {{- if $config.probes.readiness }}
          readinessProbe: {{- toYaml $config.probes.readiness | nindent 12 }}
          {{- end }}
          {{- if $config.probes.liveness }}
          livenessProbe: {{- toYaml $config.probes.liveness | nindent 12 }}
          {{- end }}
          {{- if $config.probes.startup }}
          startupProbe: {{- toYaml $config.probes.startup | nindent 12 }}
          {{- end }}
          {{- end }}

        {{- if $.Values.logging.enabled }}
        {{- if $.Values.logging.vector.enabled }}
        - name: "vector"
          image: "{{ $.Values.logging.vector.image.registry }}/{{ $.Values.logging.vector.image.name }}:{{ $.Values.logging.vector.image.tag }}"
          resources:
            {{- toYaml $.Values.logging.vector.resources | nindent 12 }}
          volumeMounts:
            - name: "{{ include "ns-go.fullname" $ }}-{{ $name }}-logs"
              mountPath: {{ $config.appConfig.log.dir | quote }}
            - name: "vector-data"
              mountPath: {{ $.Values.logging.vector.dataDir | quote }}
            - name: "config-volume-vector"
              mountPath: "/etc/vector/vector.toml"
              subPath: vector.toml
              readOnly: true
          {{- if $.Values.logging.vector.probes.enabled }}
          {{- if $.Values.logging.vector.probes.readiness }}
          readinessProbe: {{- toYaml $.Values.logging.vector.probes.readiness | nindent 12 }}
          {{- end }}
          {{- if $.Values.logging.vector.probes.liveness }}
          livenessProbe: {{- toYaml $.Values.logging.vector.probes.liveness | nindent 12 }}
          {{- end }}
          {{- if $.Values.logging.vector.probes.startup }}
          startupProbe: {{- toYaml $.Values.logging.vector.probes.startup | nindent 12 }}
          {{- end }}
          {{- end }}
        {{- end }}
        {{- end }}

      volumes:
        - name: "{{ include "ns-go.fullname" $ }}-{{ $name }}-logs"
          emptyDir: {}

        {{- if $.Values.logging.enabled }}
        {{- if $.Values.logging.vector.enabled }}
        - name: "vector-data"
          emptyDir: {}
        - name: "config-volume-vector"
          configMap:
            name: "{{ include "ns-go.fullname" $ }}-{{ $name }}-logging"
            items:
              - key: vector.toml
                path: vector.toml
        {{- end }}
        {{- end }}

        {{- if $config.appConfig.extraFiles }}
        {{- range $config.appConfig.extraFiles }}
        - name: "{{ include "ns-go.fullname" $ }}-{{ $name }}-{{ .path | replace "/" "-" | replace "." "-" | trimAll "-" }}"
          secret:
            secretName: "{{ include "ns-go.fullname" $ }}-{{ $name }}-extra-files-{{ .path | replace "/" "-" | replace "." "-" | trimAll "-" }}"
            items:
            {{- range .files }}
              - key: "{{ .name }}"
                path: "{{ .name }}"
            {{- end }}
        {{- end }}
        {{- end }}

      {{- if $config.nodeSelector }}
      nodeSelector: {{ toYaml $config.nodeSelector | nindent 8 }}
      {{- end }}

      {{- if $config.affinity }}
      affinity: {{ toYaml $config.affinity | nindent 8 }}
      {{- else }}
      affinity:
        {{- if eq $config.podAntiAffinityPreset "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    {{- include "ns-go.selectorLabels" $ | nindent 20 }}
                    app.kubernetes.io/component: {{ $name }}
              weight: 100
        {{- else if eq $config.podAntiAffinityPreset "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  {{- include "ns-go.selectorLabels" $ | nindent 18 }}
                  app.kubernetes.io/component: {{ $name }}
        {{- end }}
      {{- end }}

      {{- if $config.tolerations }}
      tolerations: {{ toYaml $config.tolerations | nindent 8 }}
      {{- end }}
...
{{- end }}
{{- end }}
